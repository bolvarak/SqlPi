/////////////////////////////////////////////////////////////////////////////////////////
/// Definitions ////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

#ifndef SQLPI_API_BACKEND_HPP
#define SQLPI_API_BACKEND_HPP

/////////////////////////////////////////////////////////////////////////////////////////
/// Headers ////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

#include <QByteArray>
#include <QObject>
#include <QSqlDatabase>
#include <QSqlDriver>
#include <QSqlError>
#include <QSqlQuery>
#include <QSqlRecord>
#include <QSqlResult>
#include <QString>
#include <QVariant>
#include <QVariantList>
#include <QVariantMap>

/////////////////////////////////////////////////////////////////////////////////////////
/// SqlPi Namespace ////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

namespace SqlPi
{
	/////////////////////////////////////////////////////////////////////////////////////
	/// SqlPi::Api Namespace ///////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////

	namespace Api
	{
		/////////////////////////////////////////////////////////////////////////////////
		/// SqlPi::Api::Backend Class Definition ///////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////

		class Backend : public QObject
		{
				/**
				 * Qt Recognition
				 */
				Q_OBJECT

			/////////////////////////////////////////////////////////////////////////////
			/// Protected Methods & Properties /////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////////

			protected:

				/////////////////////////////////////////////////////////////////////////
				/// Properties /////////////////////////////////////////////////////////
				///////////////////////////////////////////////////////////////////////

				/**
				 * @paragraph This property contains the backend database connection
				 * @brief SqlPi::Api::Backend::mConnection
				 * @var QSqlDatabase
				 */
				QSqlDatabase mConnection;

				/**
				 * @paragraph This property contains the last error that occurred
				 * @brief SqlPi::Api::Backend::mError
				 * @var QString
				 */
				QString mError;

			/////////////////////////////////////////////////////////////////////////////
			/// Public Methods & Properties ////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////////

			public:

				/////////////////////////////////////////////////////////////////////////
				/// Constructor ////////////////////////////////////////////////////////
				///////////////////////////////////////////////////////////////////////

				/**
				 * @paragraph This method instantiates a new API Backend object
				 * @brief SqlPi::Api::Backend::Backend()
				 * @param QObject* qoParent [0]
				 */
				explicit Backend(QObject* qoParent = 0);

				/////////////////////////////////////////////////////////////////////////
				/// Methods ////////////////////////////////////////////////////////////
				///////////////////////////////////////////////////////////////////////

				/**
				 * @paragraph This method executes a query against the backend
				 * @brief SqlPi::Api::Authorization::execute()
				 * @param QString strQuery
				 * @param QVariantList qvlReplacements
				 * @return QSqlQuery
				 */
				QSqlQuery execute(QString strQuery, QVariantList qvlReplacements);

				/**
				 * @paragraph This method returns the error state of the backend
				 * @brief SqlPi::Api::Backend::hasError()
				 * @return bool
				 */
				bool hasError();

				/////////////////////////////////////////////////////////////////////////
				/// Getters ////////////////////////////////////////////////////////////
				///////////////////////////////////////////////////////////////////////

				/**
				 * @paragraph This method returns the current connection from the database
				 * @brief SqlPi::Api::Backend::getConnection()
				 * @return QSqlDatabase
				 */
				QSqlDatabase getConnection();

				/**
				 * @paragraph This method returns the last error as a string
				 * @brief SqlPi::Api::Backend::getError()
				 * @return QString
				 */
				virtual QString getError();

				/////////////////////////////////////////////////////////////////////////
				/// Setters ////////////////////////////////////////////////////////////
				///////////////////////////////////////////////////////////////////////

				/**
				 * @paragraph This method sets an external connection into the instance
				 * @brief SqlPi::Api::Backend::setConnection()
				 * @param QSqlDatabase qsdConnection
				 * @return SqlPi::Api::Backend* this
				 */
				Backend* setConnection(QSqlDatabase qsdConnection);

				/**
				 * @paragraph This method sets the last error into the instance
				 * @brief SqlPi::Api::Backend::setError()
				 * @param QString qseLastError
				 * @return SqlPi::Api::Backend* this
				 */
				Backend* setError(QString strLastError);

			/////////////////////////////////////////////////////////////////////////////
			/// Public Slots ///////////////////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////////

			public slots:

		/////////////////////////////////////////////////////////////////////////////////
		}; /// End SqlPi::Api::Backend Class Definition ////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////

	/////////////////////////////////////////////////////////////////////////////////////
	} /// End SqlPi::Api Namespace /////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} /// End SqlPi Namespace //////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
#endif /// End Definitions /////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
