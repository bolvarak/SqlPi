///////////////////////////////////////////////////////////////////////////////
/// Definitions //////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#ifndef SQLPI_PROCESS_TASK_HPP
#define SQLPI_PROCESS_TASK_HPP

///////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#include <QByteArray>
#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QJsonParseError>
#include <QJsonValue>
#include <QObject>
#include <QRunnable>

///////////////////////////////////////////////////////////////////////////////
/// SqlPi Namespace //////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

namespace SqlPi
{
	///////////////////////////////////////////////////////////////////////////
	/// SqlPi::Process Namespace /////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////

	namespace Process
	{
		///////////////////////////////////////////////////////////////////////
		/// SqlPi::Process::Task Class Definition ////////////////////////////
		/////////////////////////////////////////////////////////////////////

		class Task : public QObject, public QRunnable
		{
				/**
				 * Qt Recognition
				 */
				Q_OBJECT

			///////////////////////////////////////////////////////////////////
			/// Protected Methods & Properties ///////////////////////////////
			/////////////////////////////////////////////////////////////////

			protected:

				///////////////////////////////////////////////////////////////
				/// Properties ///////////////////////////////////////////////
				/////////////////////////////////////////////////////////////

				/**
				 * @paragraph This property contains the command that was send to the socket
				 * @brief SqlPi::Process::Task::mCommand
				 * @var QByteArray
				 */
				QByteArray mCommand;

				///////////////////////////////////////////////////////////////
				/// Methods //////////////////////////////////////////////////
				/////////////////////////////////////////////////////////////

				/**
				 * @paragraph This method executes the task
				 * @brief SqlPi::Process::Task::run()
				 * @return void
				 */
				void run();

			///////////////////////////////////////////////////////////////////
			/// Public Methods & Properties //////////////////////////////////
			/////////////////////////////////////////////////////////////////

			public:

				///////////////////////////////////////////////////////////////
				/// Constructor //////////////////////////////////////////////
				/////////////////////////////////////////////////////////////

				/**
				 * @paragraph This method constructs a new task process
				 * @brief SqlPi::Process::Task::Task()
				 * @param QByteArray qbaCommand
				 */
				Task(QByteArray qbaCommand);

			///////////////////////////////////////////////////////////////////
			/// Signals //////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			signals:

				/**
				 * @paragraph This signal gets emitted when the task has finished
				 * @brief SqlPi::Process::Task::finished()
				 * @param QJsonDocument qjdResponse
				 * @return void
				 */
				void finished(QJsonDocument qjdResponse);

				/**
				 * @paragraph This signal gets emitted when an error occurs in the task's execution
				 * @brief SqlPi::Process::Task::oops()
				 * @param QString strMessage
				 * @param int intCode [0]
				 * @return void
				 */
				void oops(QString strMessage, int intCode = 0);

		///////////////////////////////////////////////////////////////////////
		}; /// End SqlPi::Process::Task Class Definition /////////////////////
		/////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////
	} /// End SqlPi::Process Namespace ///////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
} /// End SqlPi Namespace ////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
#endif /// End Definitions ///////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
