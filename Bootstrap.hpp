/////////////////////////////////////////////////////////////////////////////////////////
/// Defintions /////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

#ifndef SQLPI_BOOTSTRAP_HPP
#define SQLPI_BOOTSTRAP_HPP

/////////////////////////////////////////////////////////////////////////////////////////
/// Headers ////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

#include <QCommandLineOption>
#include <QCommandLineParser>
#include <QCoreApplication>
#include <QObject>
#include <QSqlDatabase>
#include <QSqlError>
#include "Transport/Server.hpp"

/////////////////////////////////////////////////////////////////////////////////////////
/// SqlPi Namespace ////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

namespace SqlPi
{
	/////////////////////////////////////////////////////////////////////////////////////
	/// SqlPi::Bootstrap Class Definition //////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////

	class Bootstrap : public QObject
	{
			/**
			 * Qt Recognition
			 */
			Q_OBJECT

		/////////////////////////////////////////////////////////////////////////////
		/// Protected Methods & Properties /////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////

		protected:

			/////////////////////////////////////////////////////////////////////////
			/// Properties /////////////////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This property contains our application
			 * @brief SqlPi::Bootstrap::mApplication
			 * @var QCoreApplication
			 */
			QCoreApplication mApplication;

			/**
			 * @paragraph This property contains our input from the CLI
			 * @brief SqlPi::Bootstrap::mInput
			 * @var WCommandLineParser*
			 */
			QCommandLineParser* mInput;

			/////////////////////////////////////////////////////////////////////////
			/// Methods ////////////////////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method sets up the CLI and defines the commands
			 * @brief SqlPi::Bootstrap::setupInterface()
			 */
			void setupInterface();

		/////////////////////////////////////////////////////////////////////////////
		/// Public Methods & Properties ////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////

		public:

			/////////////////////////////////////////////////////////////////////////
			/// Constructor ////////////////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method instantiates the Bootstrapper
			 * @brief SqlPi::Bootstrap::Bootstrap()
			 * @param int intArguments
			 * @param char* arrArguments[]
			 * @param QObject* qoParent [0]
			 */
			explicit Bootstrap(int intArguments, char* arrArguments[], QObject* qoParent = 0);

			/////////////////////////////////////////////////////////////////////////
			/// Static Methods /////////////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method adds a database to the pool
			 * @brief SqlPi::Bootstrap::addDatabase()
			 * @param QString strType
			 * @param QString strDatabase
			 * @param QString strHostname [QString::null]
			 * @param int intPort [0]
			 * @param QString strUsername [QString::null]
			 * @param QString strPassword [QString::null]
			 * @param QString strName [QString::null]
			 * @return
			 */
			static QSqlDatabase addDatabase(QString strType, QString strDatabase, QString strHostname = QString::null, int intPort = 0, QString strUsername = QString::null, QString strPassword = QString::null, QString strName = QString::null);

			/////////////////////////////////////////////////////////////////////////
			/// Getters ////////////////////////////////////////////////////////////
			///////////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method returns the application from the instance
			 * @brief SqlPi::Bootstrap::getApplication()
			 * @return QCoreApplication&
			 */
			QCoreApplication &getApplication();

			/**
			 * @paragraph This method returns the input parser from the instance
			 * @brief SqlPi::Bootstrap::getInput()
			 * @return QCommandLineParser*&
			 */
			QCommandLineParser* &getInput();

	/////////////////////////////////////////////////////////////////////////////////
	}; /// End SqlPi::Bootstrap Class Definition //////////////////////////
	///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} /// End SqlPi Namespace //////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
#endif /// End Definitions /////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
